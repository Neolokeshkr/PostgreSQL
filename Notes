Id and Pass

Desktop Mode pgadmin
	master password : lokesh030794

	User : postgres
	Password : root

	User : lokesh
	password : lokesh

Web Mode pgadmin
	
	email : lokesh.kumar@infozech.com
	pass :	lokesh030794

Command to login into devuser
	psql -U devusercr imaintain_cr -h localhost
	pass : devuser#418


***********************************************************
Login as postgres user and use psql shell:
	-sudo -u postgres psql

	-psql -U postgres -h localhost;

ALTER the Password for any user:
	-#>ALTER USER user_name PASSWORD 'newPassword';

To list all databases:
	-#>\l

To list all users and thier roles:
	-#>\du

To create a new user:
	-#>CREATE USER lokesh WITH CREATEDB LOGIN ENCRYPTED PASSWORD 'lokesh';
	- Here username, privilages and passoword is defined.
After creating a user its mandtory to create a database by same name:
	-#>CREATE DATABASE lokesh;

To grant privilages to a user:
	-#>GRANT ALL PRIVILAGES ON DATABASE db_name TO user_name;

SELECT 
   table_name, 
   column_name, 
   data_type 
FROM 
   information_schema.columns
WHERE 
   table_name = 'testDatabase';

To select all records:
	#SELECT * FROM public."tableName";
		OR
	#SELECT * FROM tableName


192.168.0.128

To select DISTINCT records:
	#SELECT DISTINCT test1."contractorName" from test1;

*****************************************************************
20 July 2021

CREATE TABLE reassignment_history (
	ser_id serial PRIMARY KEY,
	req_stage VARCHAR ( 100 ) NOT NULL,
	reassigned_by VARCHAR ( 255 ) NOT NULL,
	reassigned_to VARCHAR ( 255 ) NOT NULL,
	reassigned_date TIMESTAMP NOT NULL
);

2. Create reassignmentHistory.js file in AppBundle

3.
*****************************************************************


Some important notes:

1. To create a ENUM Data Type:
	CREATE TYPE week AS ENUM ('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun');

2. To see the list of custom ENUM Data types
	1. \dT
	2. \dt+ -> To view ENUM structure.

3. Declaration of Array:
	CREATE TABLE monthly_savings (
	   name text,
	   saving_per_quarter integer[],
	   scheme text[][]
	);

4. Composite Types: Allows user to create structure which is a combination of columns.
	CREATE TYPE inventory_item AS (
	   name text,
	   supplier_id integer,
	   price numeric
	);
	=# \l - To display list of databases.

5. Connecting to Database:	
	=# \c name_of_db;

6. Delete a database:
	USing SQL:
	=# DROP DATABASE db_name;
	=# DROP DATABASE IF EXISTS db_name;

	Using command line:
	$ dropdb --if-exists -ei -h hostname -p port -U username db_name;
		-e : echo
		-i : issues verification prompt.

7. Creating a Table:
	=# CREATE TABLE COMPANY(
	   ID INT PRIMARY KEY     NOT NULL,
	   NAME           TEXT    NOT NULL,
	   AGE            INT     NOT NULL,
	   ADDRESS        CHAR(50),
	   SALARY         REAL
	);
	
8. Deleting a table:
	=# DROP TABLE table_name1, table_name2;

9. To Create a Schema:
	=# CREATE SCHEMA schema_name;
	=# CREATE TABLE schema_name.testTable();

10. To Delete schema:
	Empty Schema(All object already dropped)
		=# DROP SCHEMA schema_name
	Drop Schema including objects
		=# DROP SCHEMA schema_name CASCADE;

11. To list all the Schemas:
	=# \dn

12. To list all sequences
	=# \ds;
	=# \ds+;

13. Using DEFAULT keyword:
	-It is used when no value is specified/available for the column.

14. Using Expressions:
	=# SELECT col1+col2 as new_col_name FROM table_name;

15. Some built in numeric functions:
	COUNT(*),SUM(cols),AVG(cols) 

16. Date Expressions:
	SELECT CURRENT_DATE;
	SELECT CURRENT_TIMESTAMP;

